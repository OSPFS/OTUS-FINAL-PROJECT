---
# tasks file for Database

- name: Wois master?
  shell: curl -s  http://10.10.10.15:8008/cluster | jq '.members []|select(.role|contains("leader"))'|grep host|cut -d '"' -f4
  register: master_node

- name: Wois master?
  shell: curl -s  http://10.10.10.15:8008/cluster | jq '.members []|select(.role|contains("leader"))'|grep name|cut -d '"' -f4
  register: master_name

- debug:
    msg: "Master is: {{ master_node.stdout }}"

- name: Create a new database with name "cmsdb"  
  postgresql_db:
    login_host: "{{ master_node.stdout }}"
    login_user: postgres
    login_password: P@ssw0rd
    name: cmsdb
    state: present
    encoding: UTF-8

- name: Create cmsdb DB User
  postgresql_user:
    login_host: "{{ master_node.stdout }}"
    login_user: postgres
    login_password: P@ssw0rd
    db: cmsdb
    name: cmska
    password: LoG0peD
    state: present
    priv: CONNECT

- name: Create a new database with name "zabbix"  

  postgresql_db:
    login_host: "{{ master_node.stdout }}"
    login_user: postgres
    login_password: P@ssw0rd
    name: zabbix
    state: present
    encoding: UTF-8

- name: Create zabbix DB User

  postgresql_user:
    login_host: "{{ master_node.stdout }}"
    login_user: postgres
    login_password: P@ssw0rd  
    db: zabbix
    name: zabbix
    password: LoG0peD
    state: present
    priv: CONNECT

- include: copydb.yml

# - name: DBackup Sync
#   synchronize: 
#     src: cmsdb.gz
#     dest: /tmp
#   delegate_to: "{{ master_node.stdout }}"

# - name: DBackup Sync
#   synchronize: 
#     src: zabbix.bkp
#     dest: /tmp
#   delegate_to: "{{ master_node.stdout }}"

- name: Restore database "cmsdb"
  postgresql_db:
    login_host: "{{ master_node.stdout }}"
    login_user: postgres
    login_password: P@ssw0rd  
    name: cmsdb
    target: /tmp/cmsdb.gz
    state: restore

- name: Restore database "zabbix"  
  postgresql_db:
    login_host: "{{ master_node.stdout }}"
    login_user: postgres
    login_password: P@ssw0rd  
    name: zabbix
    target: /tmp/zabbix.bkp
    state: restore
